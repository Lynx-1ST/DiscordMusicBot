const {
    EmbedBuilder,
    ActionRowBuilder,
    StringSelectMenuBuilder,
    StringSelectMenuOptionBuilder,
    ButtonBuilder,
    ButtonStyle,
} = require("discord.js");
const { readdirSync } = require("fs");
const { supportUrl, inviteUrl, voteUrl } = require("../../../settings/config.js");

module.exports = {
    name: "help",
    description: "Hi·ªÉn th·ªã t·∫•t c·∫£ c√°c l·ªánh c·ªßa bot.",
    category: "Information",
    permissions: {
        bot: [],
        channel: [],
        user: [],
    },
    settings: {
        inVc: false,
        sameVc: false,
        player: false,
        current: false,
        owner: false,
        premium: false,
    },
    run: async (client, interaction) => {
        await interaction.deferReply({ ephemeral: false });

        const row2 = new ActionRowBuilder()
            .addComponents(new ButtonBuilder().setLabel("ü§ñ").setURL('https://github.com/Lynx-1ST').setStyle(ButtonStyle.Link))
            .addComponents(new ButtonBuilder().setLabel("Support üõ°Ô∏è").setURL(supportUrl).setStyle(ButtonStyle.Link));

        const categories = readdirSync("./src/commands/Slash/");

        const embed = new EmbedBuilder()
            .setAuthor({
                name: `${interaction.guild.members.me.displayName} B·∫£ng Tr·ª£ Gi√∫p! üíñ`,
                iconURL: "https://cdn.discordapp.com/emojis/1189604441213644851.gif",
            })
            .setColor(client.color)
            .setThumbnail(client.user.displayAvatarURL())
            .setDescription(
                `üëãüèª  Xin ch√†o **${interaction.member}**, T√¥i l√† **${client.user}** <a:Anime_nekocutenothirstspraywater:1212719299949502514>\n\n<:bot:1213400513597677690> **${client.user.username}**\n** M·ªôt MusicBot Discord n√¢ng cao v·ªõi giao di·ªán th√¢n thi·ªán v·ªõi ng∆∞·ªùi d√πng. T√¥i h·ª©a v·ªõi b·∫°n r·∫±ng t√¥i s·∫Ω c·ªë g·∫Øng h·∫øt s·ª©c ƒë·ªÉ mang ƒë·∫øn cho b·∫°n nh·ªØng nh·ªãp ƒëi·ªáu hay m·ªôt c√°ch r√µ r√†ng.** \n\n<a:rgb:1213819096710516757><a:rgb:1213819096710516757><a:rgb:1213819096710516757><a:hg_guradanhdan:1213401050925764659> **__DANH M·ª§C__** <a:hg_guradanhdan:1213401050925764659><a:rgb:1213819096710516757><a:rgb:1213819096710516757><a:rgb:1213819096710516757>\n<:zlogServer:1213005861555933275> ‚óè  **Th√¥ng tin**\n<a:music:1213007629379575880> ‚óè  **√Çm Nh·∫°c**\n<a:99_yellowcrown:1213402242015699074> ‚óè  **Premium**\n<:zcmtyOwner:1212982871011360768> ‚óè  **Ph√°t tri·ªÉn**\n<:zcmtyAdmin:1212983944732082246> ‚óè **B·ªô L·ªçc**\n\n<a:rgb:1213819096710516757><a:rgb:1213819096710516757><a:rgb:1213819096710516757><:update:1213006164284022795> **__TR·∫†NG TH√ÅI__:  ${client.user.username}** <:update:1213006164284022795><a:rgb:1213819096710516757><a:rgb:1213819096710516757><a:rgb:1213819096710516757>\n<:zinfoHome:1213008332906958888> ‚óè  M√°y ch·ªß: **${client.guilds.cache.size}**\n<a:green:1213401879095152682> ‚óè  ƒê·ªô tr·ªÖ: **${Math.round(client.ws.ping)}ms**\n`
            )
            .setFooter({
                text: `T·∫°o b·ªüi Lynx_1ST üõ°Ô∏è`,
                iconURL: client.user.displayAvatarURL({ dynamic: true }),
            })
            .setTimestamp();

        const row = new ActionRowBuilder().addComponents([
            new StringSelectMenuBuilder()
                .setCustomId("help-category")
                .setPlaceholder(`Danh s√°ch l·ªánh`)
                .setMaxValues(1)
                .setMinValues(1)
                .setOptions(
                    categories.map((category) => {
                        return new StringSelectMenuOptionBuilder().setLabel(category).setValue(category);
                    })
                ),
        ]);

        interaction.editReply({ embeds: [embed], components: [row, row2] }).then(async (msg) => {
            let filter = (i) => i.isStringSelectMenu() && i.user && i.message.author.id == client.user.id;

            let collector = await msg.createMessageComponentCollector({
                filter,
                time: 100000,
            });

            collector.on("collect", async (m) => {
                if (m.isStringSelectMenu()) {
                    if (m.customId === "help-category") {
                        await m.deferUpdate();

                        let [directory] = m.values;

                        const embed = new EmbedBuilder()
                            .setAuthor({
                                name: `${interaction.guild.members.me.displayName} l·ªánh h·ªó tr·ª£!`,
                                iconURL: interaction.guild.iconURL({ dynamic: true }),
                            })
                            .setDescription(
                                `\ \n\n**\<a:emoji6592:1213420855300984832> ${
                                    directory.slice(0, 1).toUpperCase() + directory.slice(1)
                                } Commands:**\n${client.slashCommands
                                    .filter((c) => c.category === directory)
                                    .map((c) => `\`${c.name}\` : *${c.description}*`)
                                    .join("\n")}`
                            )
                            .setColor(client.color)
                            .setFooter({
                                text: `T·∫°o b·ªüi Lynx_1ST üõ°Ô∏è | T·ªïng s·ªë l·ªánh: ${
                                    client.slashCommands.filter((c) => c.category === directory).size
                                }`,
                                iconURL: client.user.displayAvatarURL({ dynamic: true }),
                            })
                            .setTimestamp();

                        msg.edit({ embeds: [embed] });
                    }
                }
            });

            collector.on("end", async (collected, reason) => {
                if (reason === "time") {
                    const timed = new EmbedBuilder()
                        .setAuthor({
                            name: `${interaction.guild.members.me.displayName} B·∫£ng Tr·ª£ Gi√∫p! üíñ`,
                            iconURL: interaction.guild.iconURL({ dynamic: true }),
                        })
                        .setDescription(
                            `Vui l√≤ng s·ª≠ d·ª•ng l·∫°i /help ƒë·ªÉ ki·ªÉm tra l·ªánh <a:green:1213401879095152682>`
                        )
                        .setColor(client.color)
                        .setFooter({
                            text: `DMs ƒë·ªÉ tr·ªü th√†nh Premium`,
                            iconURL: client.user.displayAvatarURL({ dynamic: true }),
                        })
                        .setTimestamp();

                    msg.edit({ embeds: [timed], components: [row2] });
                }
            });
        });
    },
};
